#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include <ESP32Servo.h>  // Include the ESP32Servo library

// Define OLED display dimensions
#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64

// I2C address for OLED
#define OLED_ADDR 0x3C

// Create an SSD1306 OLED display object connected to I2C
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, -1);

// Create a Servo object
Servo myServo;

// Define the servo pin
const int servoPin = 18;

void setup() {
  // Initialize serial communication for debugging
  Serial.begin(115200);

  // Initialize the OLED display
  Wire.begin(21, 20);  // SDA = 21, SCL = 20
  if (!display.begin(SSD1306_SWITCHCAPVCC, OLED_ADDR)) {
    Serial.println(F("SSD1306 allocation failed"));
    for (;;); // Loop forever if OLED initialization fails
  }

  // Clear the display buffer
  display.clearDisplay();

  // Attach the servo to the defined pin
  myServo.attach(servoPin);

  // Initial message on the OLED
  display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(0, 0);
  display.println(F("Servo Calibration"));
  display.display();
  delay(1000); // Wait for 1 second to show the message
}

void loop() {
  // Sweep the servo from 0 to 180 degrees
  for (int angle = 0; angle <= 180; angle++) {
    myServo.write(angle);  // Set the servo position
    displayServoAngle(angle);  // Display the angle on the OLED
    delay(15);  // Delay to allow the servo to reach the position
  }

  // Sweep the servo from 180 to 0 degrees
  for (int angle = 180; angle >= 0; angle--) {
    myServo.write(angle);  // Set the servo position
    displayServoAngle(angle);  // Display the angle on the OLED
    delay(15);  // Delay to allow the servo to reach the position
  }
}

void displayServoAngle(int angle) {
  // Clear the display buffer
  display.clearDisplay();

  // Display the current angle
  display.setTextSize(2);
  display.setTextColor(WHITE);
  display.setCursor(0, 0);
  display.print(F("Angle: "));
  display.println(angle);
  display.display();
}
